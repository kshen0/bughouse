// Generated by CoffeeScript 1.6.3
(function() {
  var createBoard, dark, drawBoard, drawPieces, light, squareSize;

  window.Game = window.Game || {};

  squareSize = 70;

  dark = "#34495e";

  light = "#95a5a6";

  oCanvas.domReady(function() {
    var board, canvas;
    board = createBoard();
    canvas = oCanvas.create({
      canvas: "#board",
      background: dark
    });
    canvas.height = 8 * squareSize;
    canvas.width = 8 * squareSize;
    drawBoard(canvas);
    return drawPieces(canvas, board);
  });

  createBoard = function() {
    var board, col, letter, letters, num, _i;
    letters = (function() {
      var _i, _results;
      _results = [];
      for (letter = _i = 65; _i <= 72; letter = ++_i) {
        _results.push(String.fromCharCode(letter));
      }
      return _results;
    })();
    board = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = letters.length; _i < _len; _i++) {
        letter = letters[_i];
        _results.push((function() {
          var _j, _results1;
          _results1 = [];
          for (num = _j = 8; _j >= 1; num = --_j) {
            _results1.push(new window.Square("" + letter + num));
          }
          return _results1;
        })());
      }
      return _results;
    })();
    console.log(board[0][0]);
    for (col = _i = 0; _i <= 7; col = ++_i) {
      board[col][1].piece = new window.Pawn("white", "pawn");
      board[col][6].piece = new window.Pawn("black", "pawn");
    }
    return board;
  };

  drawPieces = function(canvas, board) {
    var text, x, y, _i, _results;
    _results = [];
    for (x = _i = 0; _i <= 7; x = ++_i) {
      _results.push((function() {
        var _j, _results1;
        _results1 = [];
        for (y = _j = 0; _j <= 7; y = ++_j) {
          console.log("draw " + x + " " + y);
          console.log(board[x][y]);
          text = canvas.display.text({
            x: x * squareSize + squareSize / 2,
            y: y * squareSize + squareSize / 2,
            origin: {
              x: "center",
              y: "center"
            },
            font: "bold 12px sans-serif",
            text: board[x][y].piece != null ? board[x][y].piece.toString() : "",
            fill: "#2980b9"
          });
          _results1.push(canvas.addChild(text));
        }
        return _results1;
      })());
    }
    return _results;
  };

  drawBoard = function(canvas) {
    var createRectangle, x, y, _i, _results;
    createRectangle = function(x, y, color) {
      var rectangle;
      rectangle = canvas.display.rectangle({
        x: x,
        y: y,
        width: squareSize,
        height: squareSize,
        fill: color
      });
      return canvas.addChild(rectangle);
    };
    _results = [];
    for (x = _i = 0; _i <= 7; x = ++_i) {
      _results.push((function() {
        var _j, _results1;
        _results1 = [];
        for (y = _j = 0; _j <= 7; y = ++_j) {
          _results1.push(createRectangle(x * squareSize, y * squareSize, (y + x) % 2 === 0 ? light : dark));
        }
        return _results1;
      })());
    }
    return _results;
  };

}).call(this);
